import stdio
import m65.setup
import m65.palettes
import scroll
import player
import tiles
import playfield
import sound
import random
import statusDisplay
import newGame

const word TILE_DATA_LOCATION = $2200;

// raster location
volatile byte VIC2_D012 @ $D012

// game states
const byte STATE_TITLE = 0;
const byte STATE_PLAYING = 1;
const byte STATE_GAMEOVER = 2;
byte game_state;

word downhill_speed;
byte max_downhill_speed;
word vertical_scroll_amount;
byte times_played;



void main() {
  times_played = 0;
  times_high_score_achieved = 0;

  // all the once off stuff
  setupSystem();  
  setupSprites();
  setTilePalette();
  setSpritePalette();
  clearColorRAM();
  initSound();
  initScroll();
  initPlayerControls();


  rand_seed = 1;

  // start a new game
  newGame();

  while true {
    // wait for raster line
    while(VIC2_D012  != 254) {}

    if(game_state == STATE_GAMEOVER) {
      // game over status just waits for button press
      gameOverPlayerControls();
      stopNoise();      
    }

    if(game_state == STATE_PLAYING) {

      v_scroll_coarse_needed = 0;
      playerControls();

      // high byte has number of pixels to scroll 
      vertical_scroll_amount = vertical_scroll_amount + (downhill_speed >> 3);

      if(vertical_scroll_amount.hi > 00 && player_on_ground == 1) {
        // player is moving
        startNoise();
      } else {
        stopNoise();
      }

      while(vertical_scroll_amount.hi != 0) {
        
        scrollFine();
        playerMoveX();
        drawPlayerTrack();        
  
        vertical_scroll_amount.hi = vertical_scroll_amount.hi - 1;        
      }


      playerMoveY();
      playerDraw();
      playerCalculateSpeed();

      if(v_scroll_coarse_needed != 0) {
        // need to shift everything up by one row
        scrollCoarse();
        playfieldNextRow();
        checkCollisions();
        coarseScrollTrackTiles();
      }

      animateWater();


    }

    // play music/fx in voices 1 and 2
    playMusic(0);
    playMusic(1);

    // draw status at the top
    drawStatus();

    // draw next gate indicator at bottom
    drawIndicator();

    // make sure raster line finished
    while(VIC2_D012 == 254) {}

  }
}

// tiles, sprites, character set and palettes
const array tilePaletteData @TILE_PALETTE_LOCATION     = file("bin/tilePaletteData.bin");
const array spritePaletteData @SPRITE_PALETTE_LOCATION = file("bin/spritePaletteData.bin");
const array tileData @TILE_DATA_LOCATION = file("bin/tileData.bin");
const array charsetData @CHARSET_LOCATION = file("bin/charset.bin");
const array spriteData @$8100  = file("bin/spriteData.bin");
const array statusSprites @$8000 = file("bin/statusSprites.bin");
